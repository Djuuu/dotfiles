## Keyboard

# unbind C-b
set -g prefix C-q
set -g prefix2 C-n

bind  -N "✎ split window vertically"    C-v  split-window -v
bind  -N "✎ split window horizontally"  C-t  split-window -h

bind  -N "✎ previous window"  -n M-q  previous-window
bind  -N "✎ previous pane"    -n M-s  select-pane -t :.-
bind  -N "✎ previous pane"    -n M-d  select-pane -t :.+
bind  -N "✎ next window"      -n M-f  next-window

bind  -n "M-&"  select-window -t 1
bind  -n "M-é"  select-window -t 2
bind  -n 'M-"'  select-window -t 3
bind  -n "M-'"  select-window -t 4
bind  -n "M-("  select-window -t 5
bind  -n "M--"  select-window -t 6
bind  -n "M-è"  select-window -t 7
bind  -n "M-_"  select-window -t 8
bind  -n "M-ç"  select-window -t 9
bind  -n "M-à"  select-window -t 10

bind -N "✎ select pane up"     -n M-i  select-pane -U
bind -N "✎ select pane left"   -n M-j  select-pane -L
bind -N "✎ select pane down"   -n M-k  select-pane -D
bind -N "✎ select pane righy"  -n M-l  select-pane -R

bind -N "✎ select pane up"     C-i  select-pane -U
bind -N "✎ select pane left"   C-j  select-pane -L
bind -N "✎ select pane down"   C-k  select-pane -D
bind -N "✎ select pane righy"  C-l  select-pane -R

bind -N "✎ synchronize panes"   C-y  setw synchronize-panes
bind -N "✎ disable pane input"  C-d  select-pane -d
bind -N "✎ enable pane input"   C-e  select-pane -e

# Reload tmux configuration
bind C-r run-shell " \
    tmux source-file ${CONFIG_PATH}/tmux.conf > /dev/null; \
    tmux display-message 'Sourced tmux.conf!'"

# Global bash popup
bind   b display-popup -d "#{pane_current_path}" -w 75% -h 75% -E 'bash'
bind C-b run-shell 'POPUP_NAME="-bash-"; \
    if [ "#{session_name}" = "$POPUP_NAME" ]; then \
        tmux detach-client; \
    else \
        tmux display-popup -xC -yC -w 80% -h 75% -E "tmux attach-session -t $POPUP_NAME || tmux new-session -s $POPUP_NAME"; \
    fi'

# Git popups
%hidden LAZYGIT_POPUP='bash -c "\
    source ${HOME}/.dotfiles/.bash_prompt/prompt_git_pretty.sh; \
    prompt_git_dyn_graph_width; \
    lazygit"'
%hidden GIT_GSP_POPUP='bash -c "\
    source ${HOME}/.dotfiles/.bash_prompt/prompt_git_pretty.sh; \
    source ${HOME}/.dotfiles/.bash_functions; \
    prompt_git_dyn_graph_width; \
    LINES=($(tput lines)+4) git-graph-status-page --pretty=graph-dyn; read -rsn1"'
bind   g display-popup -d "#{pane_current_path}" -w 68% -h 66% -E ${GIT_GSP_POPUP}
bind C-g display-popup -d "#{pane_current_path}" -w 96% -h 90% -E ${LAZYGIT_POPUP}


## Mouse

# Keep scroll & selection on drag
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-no-clear

# Middle click on status-right: new window
bind -T root MouseDown2StatusRight new-window

# Move default session menu to click to status-right instead of left
unbind -T root MouseDown3StatusLeft
unbind -T root M-MouseDown3StatusLeft
bind -T root MouseDown3StatusRight display-menu -T "#[align=centre]#{session_name}" \
    -t = -x M -y W \
    Next n { switch-client -n } \
    Previous p { switch-client -p } \
    '' \
    Renumber N { move-window -r } \
    Rename n { command-prompt -I "#S" { rename-session "%%" } } \
    '' \
    "New Session" s { new-session } \
    "New Window" w { new-window }

# Middle click on status: kill window
bind -T root MouseDown2Status kill-window

bind -T root MouseDown1Status \
    if -F '#{==:#{mouse_status_range},git}' {
        # Click on git status module opens Lazygit
        display-popup -d "#{pane_current_path}" -w 96% -h 90% -E "${LAZYGIT_POPUP}" \
    } {
        # Click on status: select window (default)
        select-window -t =
    }

bind -T root MouseDown2Status \
    if -F '#{==:#{mouse_status_range},git}' {
    } {
        # Middle click on status: kill window
        kill-window
    }

bind -T root MouseDown3Status \
    if -F '#{==:#{mouse_status_range},git}' {
        # Right click on git status module: open git menu
        display-menu -T "#[align=centre]#{b:pane_current_path}" -t = -x M -y M \
            'git mr update'      T { display-popup -d "#{pane_current_path}" -w 68% -h 66% -EE 'bash -c "git mr update"' } \
            '' \
            'git mr open'        a { display-popup -d "#{pane_current_path}" -w 68% -h 66% -EE 'bash -c "git mr open"' } \
            'git mr status'      S { display-popup -d "#{pane_current_path}" -w 68% -h 50% -EE 'bash -c "git mr status; read -rsn1"' } \
            'git mr menu status' F { display-popup -d "#{pane_current_path}" -w 68% -h 85% -EE 'bash -c "git mr menu status; read -rsn1"' } \
            '' \
            'git update'      r { display-popup -d "#{pane_current_path}" -w 50% -h 60% -EE 'bash -c "git update; sleep 2"' } \
            '' \
            'git status page' s { display-popup -d "#{pane_current_path}" -w 68% -h 66% -E ${GIT_GSP_POPUP} }
    } {
        # Right click on status: window menu (default)
        display-menu -T "#[align=centre]#{window_index}:#{window_name}" \
            -t = -x W -y W \
            "#{?#{>:#{session_windows},1},,-}Swap Left"  l { swap-window -t :-1 } \
            "#{?#{>:#{session_windows},1},,-}Swap Right" r { swap-window -t :+1 } \
            "#{?pane_marked_set,,-}Swap Marked"          s { swap-window } \
            '' \
            Kill                          X { kill-window } \
            Respawn                       R { respawn-window -k } \
            "#{?pane_marked,Unmark,Mark}" m { select-pane -m } \
            Rename                        n { command-prompt -F -I "#W" { rename-window -t "#{window_id}" "%%" } } \
            '' \
            "New After"  w { new-window -a } \
            "New At End" W { new-window }
    }
