
[core]
	fscache = true
	whitespace = -trailing-space
	autocrlf = input
	eol = lf
	ignorecase = false
	excludesfile = ~/.gitignore.global
	editor = vim

[include]
	path = ~/.gitconfig.local

[pull]
	rebase = true

[status]
	submoduleSummary = true

[diff]
	submodule = log
	mnemonicPrefix = true
	renames = true
	wordRegex = .

[rebase]
	autosquash = true

[fetch]
	prune = true

[push]
	default = upstream

[log]
	abbrevCommit = true

[pretty]
	graph = %Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset

[color]
	diff = auto
	interactive = auto
	branch = auto
	status = auto

[rerere]
	enabled = true

[alias]
	st = "status"

	ss = "stash save -u"
	sp = "stash pop --index"

	ri = "rebase -i"
	rc = "rebase --continue"

	lg = "log --color --graph --pretty=graph --abbrev-commit --"
	lga = "log --color --graph --pretty=graph --abbrev-commit --all --"
	ld = "!f() { echo -e `git show --pretty=format:'%Cgreen%ci %Cblue%cr%Creset' $1 | head -n 1`\\\\t$1; }; f"

	fpush = "push --force-with-lease"

	gca = "gc --aggressive"

	# branches
	branches = for-each-ref --sort=-committerdate --format=\"%(color:blue)%(authordate:relative)\t%(color:red)%(authorname)\t%(color:white)%(color:bold)%(refname:short)\" refs/remotes

	# merged / non-merged branches
	mb  = "!git branch -a --merged    master | grep -v '>\\|*' | perl -pe s/^..//"
	nmb = "!git branch -a --no-merged master | grep -v '>\\|*' | perl -pe s/^..//"

	# stale merged/non-merged branches
	stmb  = "!for k in `git mb`;  do git ld $k; done | sort -r"
	stnmb = "!for k in `git nmb`; do git ld $k; done | sort -r"

	# transfer all refs from one remote to another
	transfer-remote = "!f() { [ ! -z \"$1\" ] && [ ! -z \"$2\" ] && git push $2 +refs/remotes/$1/*:refs/heads/* +refs/tags/*:refs/tags/* ; }; f"

	# remote non-origin branches
	rnob = "!git branch -a | grep remotes/ | grep -v remotes/origin | sed -e 's/remotes\\///'"

	# remove remote non-origin branches
	rrnob = "!git branch -r -d $(git rnob)"

	# tags cleanup
	ddt = "!git tag | grep delivered |xargs -i{} git tag -d {}"
	djt = "!git tag | grep jenkins |xargs -i{} git tag -d {}"
	dt = "!git ddt && git djt"

	# external commands
	k                = "!gitk --all"
	deliver          = "!bash ~/git-deliver/deliver.sh"
	build            = "!bash ~/git-build/git-build.sh"
	compare-branches = "!bash ~/git-compare-branches/git-compare-branches.sh"
	mu               = "!python ~/mu-repo/mu"

[gui]
	encoding = utf-8
	tabsize = 4
